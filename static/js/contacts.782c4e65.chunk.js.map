{"version":3,"file":"static/js/contacts.782c4e65.chunk.js","mappings":"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","sources":["shared/page/PageWrapper.tsx","core/domain/user/endpoints.ts","core/domain/user/labels.ts","shared/placeholders/EmptyDataPlaceholder.tsx","shared/placeholders/EmptyRowPlaceholder.tsx","shared/form/CheckboxController.tsx","shared/form/CurrencyTextField.tsx","pages/contacts/form/DepartmentSelect.tsx","pages/contacts/form/GenderSelect.tsx","pages/contacts/form/DialogForm.tsx","pages/contacts/table/TableBodyRows.tsx","pages/contacts/table/Table.tsx","pages/contacts/utils.ts","pages/contacts/ContactsPage.tsx"],"sourcesContent":["import { styled } from '@mui/material';\nimport * as React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PageWrapper: React.FC<Props> = (props) => {\n  const { children } = props;\n\n  return <Section>{children}</Section>;\n};\n\nconst Section = styled('section')(({ theme }) => ({\n  padding: theme.spacing(2),\n  position: 'relative',\n  height: '100vh',\n}));\n","import { UserListQueryParams } from './types';\n\nexport const userEndpoints = {\n  list: (params?: UserListQueryParams) => ['users', params],\n  update: (id: number) => `users/${id}`,\n};\n","import { DepartmentType, GenderType } from './types';\n\nexport const genderLabels: Record<GenderType, string> = {\n  female: 'Female',\n  male: 'Male',\n  other: 'Other',\n};\n\nexport const departmentLabels: Record<DepartmentType, string> = {\n  marketing: 'Marketing',\n  sales: 'Sales',\n  it: 'IT',\n  support: 'Support',\n};\n","import { Box, BoxProps, Typography } from '@mui/material';\nimport * as React from 'react';\n\ntype Props = { children?: React.ReactNode } & BoxProps;\n\nexport const EmptyDataPlaceholder: React.FC<Props> = (props) => {\n  const { children, ...rest } = props;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" p={3} {...rest}>\n      <Typography>{children || 'No data available'}</Typography>\n    </Box>\n  );\n};\n","import { Typography } from '@mui/material';\nimport * as React from 'react';\n\ntype Props = { children?: React.ReactNode };\n\nexport const EmptyRowPlaceholder: React.FC<Props> = (props) => {\n  const { children } = props;\n  return <Typography variant=\"body2\">{children || '---'}</Typography>;\n};\n","import { Checkbox, FormControlLabel } from '@mui/material';\nimport * as React from 'react';\nimport { Controller, Control, Path } from 'react-hook-form';\n\ntype Props<T> = {\n  control: Control<T>;\n  name: Path<T>;\n  label: string;\n};\n\nexport function CheckboxController<T>(props: Props<T>) {\n  const { control, name, label } = props;\n  return (\n    <FormControlLabel\n      control={\n        <Controller\n          name={name}\n          control={control}\n          render={({ field }) => (\n            <Checkbox {...field} checked={!!field.value} onChange={(e) => field.onChange(e.target.checked)} />\n          )}\n        />\n      }\n      label={label}\n    />\n  );\n}\n","import * as React from 'react';\nimport NumberFormat from 'react-number-format';\n\ntype Props = {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n};\n\nexport const CurrencyTextField = React.forwardRef<NumberFormat<{}>, Props>((props, ref) => {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n    />\n  );\n});\n","import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\nimport * as React from 'react';\nimport { Control, Controller } from 'react-hook-form';\nimport { departmentLabels } from 'src/core/domain/user';\nimport { Inputs } from './DialogForm';\n\ntype Props = {\n  control: Control<Inputs>;\n};\n\nexport const DepartmentSelect: React.FC<Props> = (props) => {\n  const { control } = props;\n\n  return (\n    <FormControl margin=\"dense\" fullWidth>\n      <InputLabel id=\"department-select-label\">Department</InputLabel>\n      <Controller\n        name=\"department\"\n        control={control}\n        render={({ field }) => (\n          <Select {...field} variant=\"standard\" labelId=\"department-select-label\">\n            <MenuItem value=\"\">\n              <em>Select Department</em>\n            </MenuItem>\n            {Object.entries(departmentLabels).map(([val, label]) => (\n              <MenuItem key={val} value={val}>\n                {label}\n              </MenuItem>\n            ))}\n          </Select>\n        )}\n      />\n    </FormControl>\n  );\n};\n","import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from '@mui/material';\nimport * as React from 'react';\nimport { Control, Controller } from 'react-hook-form';\nimport { genderLabels } from 'src/core/domain/user';\nimport { Inputs } from './DialogForm';\n\ntype Props = {\n  control: Control<Inputs>;\n};\n\nexport const GenderSelect: React.FC<Props> = (props) => {\n  const { control } = props;\n  return (\n    <FormControl>\n      <FormLabel>Gender</FormLabel>\n      <Controller\n        name=\"gender\"\n        control={control}\n        render={({ field }) => (\n          <RadioGroup {...field} row>\n            {Object.entries(genderLabels).map(([val, label]) => (\n              <FormControlLabel key={val} value={val} control={<Radio />} label={label} />\n            ))}\n          </RadioGroup>\n        )}\n      />\n    </FormControl>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormGroup,\n  Grid,\n  InputAdornment,\n  TextField,\n} from '@mui/material';\nimport * as React from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { DepartmentType, GenderType, UserDto, userEndpoints } from 'src/core/domain/user';\nimport { CheckboxController, CurrencyTextField } from 'src/shared/form';\nimport { client } from 'src/shared/utils';\nimport { DepartmentSelect } from './DepartmentSelect';\nimport { GenderSelect } from './GenderSelect';\n\nexport type Inputs = {\n  first_name: string;\n  last_name?: string;\n  email: string;\n  gender: GenderType | null;\n  department: DepartmentType | '';\n  contribution?: string;\n  isActive?: boolean;\n};\n\ntype Props = {\n  open: boolean;\n  onClose: () => void;\n  user: UserDto;\n};\n\nexport const DialogForm: React.FC<Props> = (props) => {\n  const { onClose, open, user } = props;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting, isValidating },\n    control,\n  } = useForm<Inputs>({\n    mode: 'all',\n    defaultValues: {\n      gender: null,\n      department: '',\n      contribution: '',\n      isActive: true,\n      ...user,\n    },\n  });\n\n  const { mutateAsync } = useMutation((data: Inputs) =>\n    client(userEndpoints.update(user.id), {\n      jsonBody: data,\n      method: 'PUT',\n    }),\n  );\n  const queryClient = useQueryClient();\n\n  const onSubmit: SubmitHandler<Inputs> = (data) =>\n    mutateAsync(data, {\n      onSuccess: () => {\n        queryClient.invalidateQueries(userEndpoints.list());\n        onClose();\n      },\n    });\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"xs\" fullWidth>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle>\n          Edit Contact \"{user.first_name} {user.last_name}\"\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item sm={12} md={6}>\n              <TextField\n                margin=\"dense\"\n                label=\"First Name\"\n                fullWidth\n                variant=\"standard\"\n                error={!!errors.first_name?.message}\n                helperText={errors.first_name?.message ?? ' '}\n                {...register('first_name', { required: 'First name is required' })}\n              />\n            </Grid>\n            <Grid item sm={12} md={6}>\n              <TextField margin=\"dense\" label=\"Last Name\" fullWidth variant=\"standard\" {...register('last_name')} />\n            </Grid>\n            <Grid item sm={12}>\n              <GenderSelect control={control} />\n            </Grid>\n            <Grid item sm={12}>\n              <TextField\n                margin=\"dense\"\n                label=\"Email Address\"\n                type=\"email\"\n                fullWidth\n                variant=\"standard\"\n                error={!!errors.email?.message}\n                helperText={errors.email?.message ?? ' '}\n                {...register('email', { required: 'Email is required' })}\n              />\n            </Grid>\n            <Grid item sm={12} md={6}>\n              <DepartmentSelect control={control} />\n            </Grid>\n            <Grid item sm={12} md={6}>\n              <TextField\n                margin=\"dense\"\n                label=\"Contribution\"\n                fullWidth\n                variant=\"standard\"\n                {...register('contribution')}\n                InputProps={{\n                  inputComponent: CurrencyTextField as any,\n                  startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                }}\n              />\n            </Grid>\n            <Grid item sm={12}>\n              <FormGroup>\n                <CheckboxController control={control} name=\"isActive\" label=\"Is Active\" />\n              </FormGroup>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>Cancel</Button>\n          <Button type=\"submit\" disabled={isSubmitting || isValidating}>\n            Save\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n","import * as React from 'react';\nimport { TableCell, TableRow } from '@mui/material';\nimport { TableInstance } from 'react-table';\nimport { UserDto } from 'src/core/domain/user';\nimport { EmptyDataPlaceholder } from 'src/shared/placeholders';\n\ntype Props = {\n  tableInstance: TableInstance<UserDto>;\n  onClick: (user: UserDto) => void;\n};\n\nexport const TableBodyRows: React.FC<Props> = (props) => {\n  const {\n    tableInstance: { rows, visibleColumns, prepareRow },\n    onClick,\n  } = props;\n\n  const handleRowClick = (user: UserDto) => {\n    onClick(user);\n  };\n\n  if (!rows.length) {\n    return (\n      <tr>\n        <td colSpan={visibleColumns.length}>\n          <EmptyDataPlaceholder />\n        </td>\n      </tr>\n    );\n  }\n\n  return (\n    <>\n      {rows.map((row) => {\n        prepareRow(row);\n        return (\n          <TableRow\n            {...row.getRowProps()}\n            hover\n            onClick={() => handleRowClick(row.original)}\n            sx={{\n              cursor: 'pointer',\n            }}\n          >\n            {row.cells.map((cell) => (\n              <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>\n            ))}\n          </TableRow>\n        );\n      })}\n    </>\n  );\n};\n","import { Box, Table as MuiTable, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport * as React from 'react';\nimport NumberFormat from 'react-number-format';\nimport { useQuery } from 'react-query';\nimport { Column, useTable } from 'react-table';\nimport { Pageable } from 'src/core/domain/rest';\nimport { UserDto, userEndpoints } from 'src/core/domain/user';\nimport { useDialog } from 'src/shared/hooks';\nimport { EmptyRowPlaceholder } from 'src/shared/placeholders';\nimport { DialogForm } from '../form';\nimport { filterUsers } from '../utils';\nimport { TableBodyRows } from './TableBodyRows';\n\nexport const columns: Column<UserDto>[] = [\n  {\n    Header: 'Name',\n    accessor: 'first_name',\n    Cell: ({\n      row: {\n        original: { avatar, first_name, last_name },\n      },\n    }) => {\n      const name = `${first_name} ${last_name}`;\n      return (\n        <Box display=\"flex\" alignItems=\"center\">\n          <img src={avatar} alt={`${name} avatar`} width={50} />\n          <Box component=\"span\" marginLeft={1}>\n            {name}\n          </Box>\n        </Box>\n      );\n    },\n  },\n  {\n    Header: 'Department',\n    accessor: 'department',\n    Cell: ({ value }) => <>{value ?? <EmptyRowPlaceholder />}</>,\n  },\n  {\n    Header: 'Email',\n    accessor: 'email',\n  },\n  {\n    Header: 'Contribution',\n    accessor: 'contribution',\n    Cell: ({ value }) =>\n      value ? <NumberFormat value={value} thousandSeparator prefix=\"$\" /> : <EmptyRowPlaceholder />,\n  },\n];\n\ntype Props = {\n  query?: string;\n};\n\nexport const Table: React.FC<Props> = (props) => {\n  const { query } = props;\n  const { data } = useQuery<Pageable<UserDto>>(userEndpoints.list());\n  const filteredData = filterUsers(data?.data ?? [], query);\n\n  const tableInstance = useTable({\n    data: filteredData,\n    columns,\n  });\n  const { getTableBodyProps, getTableProps, headerGroups } = tableInstance;\n\n  const [selectedUser, setSelectedUser] = React.useState<UserDto>();\n\n  const {\n    dialog: { onClose: onCloseDialog, open },\n    button: { onClick: onShowDialog },\n  } = useDialog(false);\n\n  const handleRowClick = (user: UserDto) => {\n    setSelectedUser(user);\n    onShowDialog();\n  };\n\n  return (\n    <>\n      <TableContainer>\n        <MuiTable {...getTableProps()}>\n          {headerGroups.map((headerGroup, index) => (\n            <colgroup key={index}>\n              {headerGroup.headers.map((column) => (\n                <col key={column.id} width={column.width} />\n              ))}\n            </colgroup>\n          ))}\n          <TableHead>\n            {headerGroups.map((headerGroup) => (\n              <TableRow {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <TableCell variant=\"head\" {...column.getHeaderProps()}>\n                    {column.render('Header')}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableHead>\n          <TableBody {...getTableBodyProps()}>\n            <TableBodyRows tableInstance={tableInstance} onClick={handleRowClick} />\n          </TableBody>\n        </MuiTable>\n      </TableContainer>\n      {open && selectedUser ? <DialogForm open={open} onClose={onCloseDialog} user={selectedUser} /> : null}\n    </>\n  );\n};\n","import { UserDto } from 'src/core/domain/user';\n\nexport const filterUsers = (users: UserDto[], query?: string): UserDto[] => {\n  if (!query) {\n    return users;\n  }\n\n  const regex = new RegExp(query, 'i');\n  return users.filter(({ first_name, last_name }) => regex.test(`${first_name} ${last_name}`));\n};\n","import SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment, Paper, TextField, Typography } from '@mui/material';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { PageWrapper } from 'src/shared/page';\nimport { Table } from './table/Table';\n\nexport const ContactsPage: React.FC = () => {\n  const [query, setQuery] = React.useState<string>();\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // mark as low priority update\n    React.startTransition(() => {\n      setQuery(event.target.value.trim());\n    });\n  };\n\n  return (\n    <PageWrapper>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Paper\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          zIndex: 1,\n          flexGrow: 1,\n          padding: 2,\n        }}\n      >\n        <Typography variant=\"h5\" gutterBottom>\n          Contacts\n        </Typography>\n\n        <TextField\n          label=\"Search Contacts\"\n          variant=\"outlined\"\n          size=\"small\"\n          margin=\"normal\"\n          fullWidth\n          onChange={handleChange}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Table query={query} />\n      </Paper>\n    </PageWrapper>\n  );\n};\n"],"names":["PageWrapper","props","children","Section","styled","padding","theme","spacing","position","height","userEndpoints","params","id","genderLabels","female","male","other","departmentLabels","marketing","sales","it","support","EmptyDataPlaceholder","rest","Box","display","justifyContent","alignItems","p","Typography","EmptyRowPlaceholder","variant","CheckboxController","control","name","label","FormControlLabel","render","field","Checkbox","checked","value","onChange","e","target","CurrencyTextField","React","ref","getInputRef","onValueChange","values","thousandSeparator","isNumericString","DepartmentSelect","FormControl","margin","fullWidth","InputLabel","Select","labelId","MenuItem","Object","entries","map","val","GenderSelect","FormLabel","RadioGroup","row","Radio","DialogForm","onClose","open","user","useForm","mode","defaultValues","gender","department","contribution","isActive","register","handleSubmit","formState","errors","isSubmitting","isValidating","mutateAsync","useMutation","data","client","jsonBody","method","queryClient","useQueryClient","Dialog","maxWidth","onSubmit","onSuccess","invalidateQueries","DialogTitle","first_name","last_name","DialogContent","Grid","container","item","sm","md","TextField","error","message","helperText","required","type","email","InputProps","inputComponent","startAdornment","InputAdornment","FormGroup","DialogActions","Button","onClick","disabled","TableBodyRows","tableInstance","rows","visibleColumns","prepareRow","handleRowClick","length","TableRow","getRowProps","hover","original","sx","cursor","cells","cell","TableCell","getCellProps","colSpan","columns","Header","accessor","Cell","avatar","src","alt","width","component","marginLeft","prefix","Table","query","useQuery","filteredData","users","regex","RegExp","filter","test","filterUsers","useTable","getTableBodyProps","getTableProps","headerGroups","selectedUser","setSelectedUser","useDialog","dialog","onCloseDialog","onShowDialog","button","TableContainer","headerGroup","index","headers","column","TableHead","getHeaderGroupProps","getHeaderProps","TableBody","ContactsPage","setQuery","Helmet","Paper","flexDirection","zIndex","flexGrow","gutterBottom","size","event","trim","endAdornment","Search"],"sourceRoot":""}